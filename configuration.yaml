#-------------------------------------------------------------------------------------------------------
#                                                                                                      |
#                                           JCORE CONFIG                                               |
#                                                                                                      |
#-------------------------------------------------------------------------------------------------------

# Reverse proxy support
http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 127.0.0.1
    - ::1
    - 172.0.0.0/8
    - 172.18.0.3  
    - 172.18.0.0/16
    - 172.20.0.0/16 
    - 192.168.0.0/16
    - 10.0.0.0/8
  cors_allowed_origins:
    - https://ha.dreammachine.casa
    - https://jcore.dreammachine.casa

# Load defaults
default_config:

# Frontend custom config
frontend:
  themes: !include_dir_merge_named themes
  extra_module_url:
    - /local/community/lovelace-card-mod/card-mod.js
    - /local/grafana-persistent.js

# Lovelace configuration (fixed - removed duplicate)
lovelace:
  mode: yaml
  resources:
    - url: /local/addon-iframe-card.js
      type: module
  dashboards:
    mac-dashboard:
      mode: yaml
      title: macOS Dashboard
      icon: mdi:apple
      show_in_sidebar: true
      filename: mac-dashboard.yaml

# HACS integrations dashboard
hacs:
  token: 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

homeassistant:
  packages: !include_dir_named packages
  allowlist_external_dirs:
  allowlist_external_urls:
    - https://grafana.dreammachine.casa/*
    - https://grafana.dreammachine.casa/public-dashboards/*

# Automations
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

# MariaDB
recorder:
  db_url: mysql://mbxxvii:6wk44!ez#MS2Qhhw@jcore_mariadb:3306/JCORE?charset=utf8mb4
  purge_keep_days: 10
  commit_interval: 5
  exclude:
    domains:
      - automation
      - updater
    entity_globs:
      - sensor.last_boot
      - sensor.date*
    entities:
      - sun.sun
      - sensor.jia_sat_1_jia_volume

# InfluxDB
influxdb:
  host: jcore_influxdb
  port: 8086
  api_version: 2
  token: yKetXhtpyszZ7DLg4omRT7nr96InN6SSzgbQG5k9iyhGdP3ZMoks3U00Hvz134c7b7iYfEMTGLqNHLEgGOEpWw==
  organization: a3a457155edbb91d
  bucket: jcore
  default_measurement: state
  ssl: false
  verify_ssl: false

# Prometheus metrics endpoint
prometheus:
  namespace: hass
  requires_auth: false 
  include:
    domains:
      - sensor
      - binary_sensor
      - sun
    entities:
      - sensor.living_room_temperature
      - sensor.front_door_battery_level

# Input text helpers
input_text:
  hetzner_server_id:
    name: Hetzner Server ID
    initial: !secret hetzner_server_id
    mode: password
  hetzner_api_token:
    name: Hetzner API Token  
    initial: !secret hetzner_api_token
    mode: password

# Rest Commands
rest_command:
  hetzner_shutdown_server:
    url: "https://api.hetzner.cloud/v1/servers/{{ server_id }}/actions/shutdown"
    method: POST
    headers:
      Authorization: "Bearer {{ api_token }}"
      Content-Type: "application/json"
    payload: '{}'
  
  hetzner_poweroff_server:
    url: "https://api.hetzner.cloud/v1/servers/{{ server_id }}/actions/poweroff"
    method: POST
    headers:
      Authorization: "Bearer {{ api_token }}"
      Content-Type: "application/json"
    payload: '{}'

  hetzner_poweron_server:
    url: "https://api.hetzner.cloud/v1/servers/{{ server_id }}/actions/poweron"
    method: POST
    headers:
      Authorization: "Bearer {{ api_token }}"
      Content-Type: "application/json"
    payload: '{}'

# Sensors
sensor:
  - platform: rest
    name: "Hetzner Server Direct"
    resource: "https://api.hetzner.cloud/v1/servers/61655748"
    headers:
      Authorization: "Bearer nRElzSvzwYxEdL8AJUO4D3hJDVzagqdUndQ8jnvpNXufyyRTDMkClAE7Oq8IgN0E"
    value_template: "{{ value_json.server.status }}"
    json_attributes:
      - server
    scan_interval: 60

binary_sensor:
  - platform: rest
    name: "Metrics Endpoint Running"
    resource: http://5.9.20.78:9100/metrics
    method: GET
    value_template: "{{ value | length > 0 }}"
    device_class: connectivity
    scan_interval: 60

# Sensor Templates
template:
  sensor:
    - name: "Hetzner Server #1 Status"
      state: "{{ states('sensor.hetzner_server_direct') | capitalize }}"
      icon: >-
        {% if is_state('sensor.hetzner_server_direct','running') %}
          mdi:server-network
        {% else %}
          mdi:server-off
        {% endif %}

    - name: "Hetzner Server Simple Status"
      state: "{{ states('sensor.hetzner_server_direct') }}"
      icon: >-
        {% if states('sensor.hetzner_server_direct') == 'running' %}
          mdi:server
        {% else %}
          mdi:server-off
        {% endif %}

    - name: "Metrics Server Status"
      state: >-
        {% if is_state('binary_sensor.metrics_endpoint_running','on') %}
          Running
        {% else %}
          Down
        {% endif %}
