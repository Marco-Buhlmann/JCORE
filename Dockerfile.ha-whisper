#-------------------------------------------------------------------------------------------------------
#                                                                                                      |
#                                           WHISPER STT                                                |
#                                                                                                      |
#-------------------------------------------------------------------------------------------------------


# JCORE Faster Whisper Integration Dockerfile

ARG HA_BASE_IMAGE=ghcr.io/home-assistant/home-assistant:stable
FROM ${HA_BASE_IMAGE}

# Use bash for more robust shell scripting
SHELL ["/bin/ash", "-o", "pipefail", "-c"]

# Switch to root for installation
USER root

# Install comprehensive build dependencies
RUN \
    apk update && \
    apk add --no-cache \
      ca-certificates \
      ffmpeg \
      ffmpeg-dev \
      build-base \
      python3-dev \
      py3-pip \
      gcc \
      musl-dev \
      linux-headers \
      cmake \
      make \
      g++ \
      rust \
      cargo \
    && \
    rm -rf /var/cache/apk/*

# Upgrade pip and setuptools
RUN pip3 install --upgrade \
    pip \
    setuptools \
    wheel

# Install core dependencies with robust error handling
RUN pip3 install --no-cache-dir \
    torch \
    transformers \
    tokenizers \
    ctranslate2 \
    numpy

# Install Faster Whisper with specific version and verbose logging
RUN pip3 install --no-cache-dir \
    faster-whisper==1.1.1 \
    && python3 -c "import faster_whisper; print('Faster Whisper Version:', faster_whisper.__version__)" \
    || echo "Whisper installation encountered an issue"

# Additional language model and utility installations
RUN pip3 install --no-cache-dir \
    openai-whisper \
    soundfile \
    librosa

# Verify installations
RUN \
    python3 -c "import faster_whisper; print('Faster Whisper successfully imported')" && \
    python3 -c "import torch; print('Torch version:', torch.__version__)" || \
    echo "Installation verification encountered issues"

# Clean up unnecessary files
RUN \
    pip3 cache purge && \
    find /usr/local/lib/python3.*/site-packages -type d -name "__pycache__" -exec rm -rf {} + && \
    find /usr/local/lib/python3.*/site-packages -type f -name "*.pyc" -delete

# Set working directory
WORKDIR /config

# Ensure correct permissions
RUN chown -R root:root /config

# Switch back to default Home Assistant user
USER root
